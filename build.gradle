plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

group = project.findProperty('GROUP') ?: 'dev.deitylamb.fern'
version = project.findProperty('VERSION') ?: '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            groupId = group
            artifactId = rootProject.name
            version = version
            
            pom {
                name = 'Fern'
                description = 'Simple and lightweight tweening library for Java'
                url = 'https://github.com/yourusername/fern'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                
                developers {
                    developer {
                        id = 'deitylamb'
                        name = 'Oleksii Rakytianskyi'
                        email = 'deitylamb@gmail.com'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/deitylamb/fern.git'
                    developerConnection = 'scm:git:ssh://github.com:deitylamb/fern.git'
                    url = 'https://github.com/deitylamb/fern'
                }
            }
        }
    }
    
    repositories {
        maven {
            name = "OSSRH"
            url = version.endsWith('SNAPSHOT') ? 
                "https://s01.oss.sonatype.org/content/repositories/snapshots/" : 
                "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.findProperty('ossrhUsername') ?: System.getenv('MAVEN_USERNAME')
                password = project.findProperty('ossrhPassword') ?: System.getenv('MAVEN_PASSWORD')
            }
        }
    }
}

signing {
    def signingKey = project.findProperty('signingKey') ?: System.getenv('SIGNING_KEY')
    def signingPassword = project.findProperty('signingPassword') ?: System.getenv('SIGNING_PASSWORD')
    
    if (signingKey && signingPassword) {
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.maven
    }
}

// Only sign if we have the signing key
tasks.withType(Sign) {
    onlyIf { project.hasProperty('signingKey') || System.getenv('SIGNING_KEY') }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = project.findProperty('ossrhUsername') ?: System.getenv('MAVEN_USERNAME')
            password = project.findProperty('ossrhPassword') ?: System.getenv('MAVEN_PASSWORD')
        }
    }
}